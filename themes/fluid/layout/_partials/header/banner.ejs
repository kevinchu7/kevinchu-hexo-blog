<%
var banner_img = page.banner_img || theme.index.banner_img
var banner_img_height = parseFloat(page.banner_img_height || theme.index.banner_img_height)
var banner_mask_alpha = parseFloat(page.banner_mask_alpha || theme.index.banner_mask_alpha)
var subtitle = page.subtitle || page.title
%>

<div id="banner" class="banner" <%- theme.banner && theme.banner.parallax && 'parallax=true' %>
     style="background: url('<%- url_for(banner_img) %>') no-repeat center center; background-size: cover;">
  <div class="full-bg-img">
    <div class="mask flex-center" style="background-color: rgba(0, 0, 0, <%= parseFloat(banner_mask_alpha) %>)">
      <div class="banner-text text-center fade-in-up">
        <div class="h2">
          <% if(theme.fun_features.typing.enable && in_scope(theme.fun_features.typing.scope)) { %>
            <span id="subtitle" data-typed-text="<%= subtitle %>"></span>
          <% } else { %>
            <span id="subtitle"><%- subtitle %></span>
          <% } %>
        </div>

        <% if (is_post()) { %>
          <%- inject_point('postMetaTop') %>
        <% } %>
      </div>

      <% if (theme.scroll_down_arrow.enable && theme.scroll_down_arrow.banner_height_limit <= banner_img_height && page.layout !== '404') { %>
        <div class="scroll-down-bar">
          <i class="iconfont icon-arrowdown"></i>
        </div>
      <% } %>
    </div>

    <% if(in_scope('home')) { %>
      <div style="height:500px" id="bubbles"></div>
      <script>
        circleMagic();
        function circleMagic(options) {
            let width;
            let height;
            let canvas;
            let ctx;
            let animateHeader = true;
            const circles = [];
    
            const settings = options || {
                color: 'rgba(255,255,255,.3)',
                radius: 10,
                density: 0.1,
                clearOffset: 0.7
            }
    
            const container = document.getElementById('bubbles');
            initContainer();
            addListeners();
    
            function initContainer() {
                width = container.offsetWidth;
                height = container.offsetHeight - 120;
    
                initCanvas();
                canvas = document.getElementById('homeTopCanvas');
                canvas.width = width;
                canvas.height = height;
                canvas.style.position = 'absolute';
                canvas.style.left = '0';
                canvas.style.bottom = '0';
                ctx = canvas.getContext('2d');
    
                for (let x = 0; x < width * settings.density; x++) {
                    const c = new Circle();
                    circles.push(c);
                }
                animate();
            }
    
            function initCanvas() {
                const canvasElement = document.createElement('canvas');
                canvasElement.id = 'homeTopCanvas';
                canvasElement.style.pointerEvents = 'none';
                container.appendChild(canvasElement);
                canvasElement.parentElement.style.overflow = 'hidden';
            }
    
            function addListeners() {
                window.addEventListener('scroll', scrollCheck, false);
                window.addEventListener('resize', resize, false);
            }
    
            function scrollCheck() {
                if (document.body.scrollTop > height) {
                    animateHeader = false;
                } else {
                    animateHeader = true;
                }
            }
    
            function resize() {
                width = container.clientWidth;
                height = container.clientHeight;
                container.height = height + 'px';
                canvas.width = width;
                canvas.height = height;
            }
    
            function animate() {
                if (animateHeader) {
                    ctx.clearRect(0, 0, width, height);
                    for (const i in circles) {
                        circles[i].draw();
                    }
                }
                requestAnimationFrame(animate);
            }
    
            function randomColor() {
                const r = Math.floor(Math.random() * 255);
                const g = Math.floor(Math.random() * 255);
                const b = Math.floor(Math.random() * 255);
                const alpha = Math.random().toPrecision(2);
                return 'rgba(' + r + ', ' + g + ', ' + b + ', ' + alpha + ')';
            }
    
            function Circle() {
                const that = this;
                (function () {
                    that.pos = {};
                    init();
                })();
                function init() {
                    that.pos.x = Math.random() * width;
                    that.pos.y = height + Math.random() * 100;
                    that.alpha = 0.1 + Math.random() * settings.clearOffset;
                    that.scale = 0.1 + Math.random() * 0.3;
                    that.speed = Math.random();
                    if (settings.color === 'random') {
                        that.color = randomColor();
                    } else {
                        that.color = settings.color;
                    }
                }
                this.draw = function () {
                    if (that.alpha <= 0) {
                        init();
                    }
                    that.pos.y -= that.speed;
                    that.alpha -= 0.0005;
                    ctx.beginPath();
                    ctx.arc(
                        that.pos.x,
                        that.pos.y,
                        that.scale * settings.radius,
                        0,
                        2 * Math.PI,
                        false
                    );
                    ctx.fillStyle = that.color;
                    ctx.fill();
                    ctx.closePath();
                }
            }
        }
      </script>
    <% } %>
  </div>
</div>

